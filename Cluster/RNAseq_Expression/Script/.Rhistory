library(knitr)
options(width=300)
knitr::opts_chunk$set(
fig.width = 10,
fig.height = 5,
fig.align = "center",
size = "tiny",
echo = FALSE, eval=TRUE,
warning = FALSE, message = FALSE,
results = TRUE, comment = "")
library(ggplot2)
library("gridExtra")
library("cowplot")
library('DT')
data.mapping <- read.table(params$mapping, sep = '\t')
data.mapping <- read.table(file = "Cufflinks.txt", sep = '\t')
colnames(data.mapping) <- c('Id','nb.read','type')
name.RNAseq <- unique(data.mapping$Id)
text <- c()
for (elt in name.RNAseq)
{
text <- c(text,paste('Total read : ',sum(data.mapping[data.mapping$Id == elt,2])),'')
}
all.read.plot <- ggplot(data.mapping,aes(x = Id,y = as.numeric(as.character(nb.read)),group = type,fill = type)) + geom_bar(stat = 'identity',color = 'black') +
coord_flip() + ylab('Nombre de read')+ ggtitle('Nombre total de reads')+scale_x_discrete(name ="")  +
scale_fill_manual(values = c('forestgreen','firebrick')) + geom_text(aes(x = Id, y = 1,label =text),hjust = 0,color = 'white')
data.aln <- data.mapping[data.mapping$type == 'Align 1 times',]
align.read.plot <- ggplot(data.aln,aes(x = Id,y = as.numeric(as.character(nb.read)))) + geom_bar(stat = 'identity',fill = 'forestgreen',color = 'black') + ggtitle('Nombre de reads alignÃ©')+
coord_flip()+scale_x_discrete(name ="")  + ylab('Nombre de read') + geom_text(aes(label = nb.read),color = 'white',hjust = 1.3)
plot_grid(all.read.plot, align.read.plot, ncol = 1, nrow = 2)
data <- read.table(file = "Count.txt")
colnames(data) <- c('Id','Position','FPKM','couverture','RNAseq')
data$FPKM <- log2(data$FPKM)
data$FPKM[data$FPKM == '-Inf'] <- 0
min_level <- 1
No_expression <- data[data$FPKM < min_level ,]
expression <- data[data$FPKM > min_level,]
stat_expression = summary(expression$FPKM)
sd.expression <- sd(expression$FPKM)
meanExpression <- mean(expression$FPKM)
summaryExpression<-data.frame(matrix(NA,ncol=3,nrow=(length(name.RNAseq)*2)))
for (indice in seq(1,(length(name.RNAseq)*2),by=2))
{
RNAseq <- as.character(name.RNAseq[round((indice+1)/2)])
summaryExpression[indice,] <- c(RNAseq,sum(expression$RNAseq == RNAseq),'Expression')
summaryExpression[indice+1,] <- c(RNAseq, sum(No_expression$RNAseq == RNAseq),'In-expression')
}
colnames(summaryExpression) <- c('Id','Count','Type')
ggplot(summaryExpression,aes(x = Id, y = as.numeric(as.character(Count)), group = Type, fill = Type)) +
geom_bar(stat = 'identity', position=position_dodge(-0.92),color = 'white')+ coord_flip() +
scale_x_discrete(name ="") +ylab('Nb Gene')+
scale_fill_manual(values = c('forestgreen','red3'))+
geom_text(aes(label = Count),hjust = 1.1, color = 'white',position=position_dodge(-0.9))
name <- unique(expression$Id)
liste.sd <- c()
liste.name <- c()
liste.mean <- c()
for (elt in name)
{
sd <- sd(expression$FPKM[expression$Id == elt])
mean <- mean(expression$FPKM[expression$Id == elt])
if (!(is.na(sd)))
{
liste.name <- c(liste.name,elt)
liste.sd <- c(liste.sd,sd)
liste.mean <- c(liste.mean,mean)
}
}
{
sd <- sd(expression$FPKM[expression$Id == elt])
mean <- mean(expression$FPKM[expression$Id == elt])
if (!(is.na(sd)))
{
liste.name <- c(liste.name,elt)
liste.sd <- c(liste.sd,sd)
liste.mean <- c(liste.mean,mean)
}
}
dispersion <- data.frame(cbind(as.character(liste.name),liste.sd,liste.mean))
