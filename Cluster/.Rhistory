#geom_text(label = name, hjust=0, vjust = 0, size = 3)
select <- test$X4 != 1
dataSelect <- test[select,]
dataSelect <- test[select,]
dataQuality <-c()
WD <- '/home/charriat/Documents/stage/StatQuality'
file.quality <- file.path(WD,'allStatQualityR')
dataQ <- read.table(file=file.quality, sep="\t", header=TRUE)
dataQ$N20 <- dataQ$groupe
idS <- c()
idSouche <- c()
for (i in 1:nrow(dataQ))
{
idS<- toString(dataQ[i,10])
idSouche <- c(idSouche,substr(idS,0,9))
}
dataQ[,11] <- idSouche
dataQuality <-dataQ[,1:9]
rownames(dataQuality) <- idSouche
kmère <- c(20,30,40,50,60,70,80,90)
Id <- c()
j <- 1
N50 <- data.frame(matrix(NA,ncol=length(kmère),nrow = (nrow(dataQuality)/8)))
for (i in 1:(nrow(dataQuality)/8))
{
Ids <- rownames(dataQuality[i*8,])
Id <- c(Id,substr(Ids,0,6))
N50[i,] <- dataQuality[j:(i*8),6]
j <- i*8+1
}
rownames(N50) <- Id
colnames(N50) <- kmère
################ Selection ############################
selection <- data.frame(matrix(NA,ncol= ncol(dataQuality) ,nrow = (nrow(dataQuality)/8)))
id.select <- c()
for (i in 1:nrow(N50))
{
bestKmer <- colnames(N50[i,])[which(N50[i,] == max(N50[i,]), arr.ind = TRUE)[2]]
newId <- paste(rownames(N50[i,]),toString(bestKmer),sep = '_')
id.select <- c(id.select,newId)
selection[i,] <-  dataQuality[rownames(dataQuality) == newId,]
}
colnames(selection) <- colnames(dataQuality)
rownames(selection) <- id.select
x.kmère <- c()
dataQuality <- dataQuality[(50*8+1):nrow(dataQuality),]
for (i in 1:(nrow(dataQuality)/8))
{
x.kmère <- c(x.kmère,rep(i,8))
}
select.kmère <- c()
for (i in 1:nrow(dataQuality))
{
if (rownames(dataQuality[i,]) %in% id.select)
{
select.kmère <- c(select.kmère, TRUE)
}
else
{
select.kmère <- c(select.kmère, FALSE)
}
}
dataQuality$N50 <- lapply(dataQuality$N50, function(x) x/1000)
dataQuality$n.500 <- lapply(dataQuality$n.500, function(x) x/1000)
dataQuality$max <- lapply(dataQuality$max, function(x) x/1000)
plot(x = x.kmère, y = dataQuality$N50, ylab =bquote('\nN50 ('*10^3*')'),xlab = '', xaxt="n" , cex = 0.3)
points(x = x.kmère[select.kmère], y = dataQuality$N50[select.kmère], cex = 0.4, col = 'red')
abline(h=25000/1000,col="red")
plot(x = x.kmère, y = dataQuality$L50, ylab ='L50', xlab = '', xaxt="n" ,  cex = 0.3)
points(x = x.kmère[select.kmère], y = dataQuality$L50[select.kmère], cex = 0.4, col = 'red')
plot(x = x.kmère, y = dataQuality$max,ylab =bquote('max ('*10^3*')'),xlab = '', xaxt="n" , cex = 0.3)
points(x = x.kmère[select.kmère], y = dataQuality$max[select.kmère], cex = 0.4, col = 'red')
plot(x = x.kmère, y = dataQuality$n.500,ylab =bquote('n:500 ('*10^3*')'),xlab = '', xaxt="n" , cex = 0.3)
points(x = x.kmère[select.kmère], y = dataQuality$n.500[select.kmère], cex = 0.4, col = 'red')
######## Affichage plot #########
N50max <- 25000 # Selection des assemblage avec un N50 supérieur à 25 000
par(mfrow=c(2,2))
plot(x = x.kmère, y = dataQuality$N50, ylab ='N50',xlab = 'Souche', xaxt="n" , main ='Graphique n°1 : Visualisation du N50\n de tous les assemblages', cex = 0.3)
points(x = x.kmère[select.kmère], y = dataQuality$N50[select.kmère], cex = 0.4, col = 'red')
abline(h=N50max,col="red")
plot(x = x.kmère, y = dataQuality$L50, ylab ='L50', xlab = 'Souche', xaxt="n" , main ='Graphique n°2 : Visualisation du L50\n de tous les assemblages', cex = 0.3)
points(x = x.kmère[select.kmère], y = dataQuality$L50[select.kmère], cex = 0.4, col = 'red')
plot(x = x.kmère, y = dataQuality$max,ylab ='max',xlab = 'Souche', xaxt="n" , main ='Graphique n°3 : Visualisation de la longueur max\n des contigs de tous les assemblages', cex = 0.3)
points(x = x.kmère[select.kmère], y = dataQuality$max[select.kmère], cex = 0.4, col = 'red')
plot(x = x.kmère, y = dataQuality$n.500,ylab ='n.500',xlab = 'Souche', xaxt="n" , main ='Graphique n°4 : Visualisationdu nombre de contigs\n supérieur à 500 de tous les assemblages' , cex = 0.3)
points(x = x.kmère[select.kmère], y = dataQuality$n.500[select.kmère], cex = 0.4, col = 'red')
#############Stat Annotation ###############################
library(ggplot2)
dataA <- read.table('Documents/stage/StatQuality/stat_Annotation.txt', header = T, sep  = ',')
qualityLiterrature <- read.table('Documents/stage/StatQuality/QualityMbioR.txt', header = T, sep  = '\t')
plotLenMean <- ggplot(dataA ,aes(x=Lengthmean)) + ggtitle("")+labs(x = "Longeur total de l'assemblage (mb)", y = 'Densité')+
geom_density(alpha=.2, fill="steelblue") + theme(axis.text.y = element_blank())
plotLenMean
plotGene <- ggplot(dataA ,aes(x=nbGene)) + ggtitle("")+labs(x = "Longeur total de l'assemblage (mb)", y = 'Densité')+
geom_density(alpha=.2, fill="steelblue") + theme(axis.text.y = element_blank())
plotGene
rownames(dataA) <- dataA$Strain
selectiontest <- selection
rownames(selectiontest) <- lapply(rownames(selection), function(x) str_sub(x,1,nchar(x)-3))
qualityLiterrature <- qualityLiterrature[,-7]
rownames(qualityLiterrature) <- qualityLiterrature$name
qualityLiterrature <- qualityLiterrature[,-10]
selectiontest <- rbind(selectiontest,qualityLiterrature)
for (elt in rownames(dataA))
{
dataA[elt,6] <- selectiontest[elt,9]
}
ggplot(dataA,aes(x=Length.mb.,y=nbGene)) + geom_point(col='steelblue') + labs(x='Nombre de gènes',y="Longueur Moyenne d'un gène") +geom_text(label = name, vjust =-1, size = 3)
color <- rep('steelblue',length(dataA$Length.mb.))
select <- dataA$Length.mb. > 39000000
color[select] <- 'forestgreen'
select <- dataA$Length.mb. > 44000000
color[select] <- 'red4'
name <- dataA$Strain
select <- dataA$Lengthmean > 1450
name[select] <- NA
select <- dataA$nbGene < 11100
name[select] <- dataA[dataA$nbGene <11100,1]
ggplot(dataA,aes(x=nbGene,y=Lengthmean)) + geom_point(col=color) + labs(x='Nombre de gènes',y="Longueur Moyenne d'un gène") +geom_text(label = name, vjust =-1, size = 3)+geom_vline(xintercept = 13554)+geom_vline(xintercept = 11726)+geom_hline(yintercept = 1469)+geom_hline(yintercept = 1605)
dataBar <- data.frame(matrix(NA,ncol= (2) ,nrow = (nrow(dataA)*2)))
rownames <- c()
for (i in seq(1,nrow(dataA),2))
{
dataBar[i,] <- c(dataA$Augustus[i],'Augustus')
dataBar[i+1,] <- c(dataA$Braker[i],'Braker')
rownames <- c(rownames,rownames(dataA)[i],rownames(dataA)[i])
}
dataBar <- cbind(rownames,dataBar)
dataBar$X1 <- as.numeric(dataBar$X1)
meanAugustus <- mean(dataA$Augustus)
meanBraker <- mean(dataA$Braker)
piedata <- data.frame(cbind(c('Augustus','Braker'), c( meanAugustus,meanBraker)))
colnames(piedata) <- c('Tools', 'mean')
piedata$mean <- c(400,12240)
pie(piedata$mean,col = c('red4','steelblue'),labels =c("Gene add with Augustus","Braker's Gene"))
ggplot(piedata,aes(x='Tools',y = 'mean'))+ geom_bar(stat="identity", color="blue", fill="black")
############### Secretome #########################
dataS <- read.table('Documents/stage/StatQuality/stat_secretome.txt', header = T, sep  = ',')
secretome_mean = mean(dataS$nb_secreted)
augustus_mean = mean(dataS$nb_augustus)
braker_mean = mean(dataS$nb_braker)
secreted <- 2022
braker <- c(10300,braker_mean)
augustus <- c(320,80)
dataPie <- read.table('Documents/stage/StatQuality/stat_mean_secretome', header = T, sep  = ',')
blank_theme <- theme_minimal()+
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.border = element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
panel.grid=element_blank(),
axis.ticks = element_blank(),
plot.title=element_text(size=14, face="bold")
)
ggplot(data = dataPie) +
geom_bar(aes(x = 1,y=X2, fill = X1),stat ='identity', position = "fill") +
coord_polar(theta = "y")+  blank_theme
pie(dataPie$X2,col=c("steelblue","forestgreen","purple","red"),density = 60,label = c('Braker unsecreted protein (81.5%)',  'Braker secreted protein (15.4 %)','Augustus unsecreted protein (2.5 %)','Augustus secreted protein (0.6%)'))
##########distribution longeur ##############################
dataD <- read.table('Documents/stage/StatQuality/stat_repeatMasker_all', header = T, sep  = '\t')
selection$sum <- as.numeric(lapply(selection$sum ,function(x) x/1000000))
plotLen <- ggplot(selection, aes(x=sum)) +labs(x = "Longeur total de l'assemblage (mb)", y = 'Densité')+
geom_density(alpha=.2, fill="steelblue") + theme(axis.text.y = element_blank())
plotLen
plotMas <- ggplot(dataD, aes(x=Pourcentagebasesmasquées)) +labs(x = "Nucléotide masquée (%)", y = 'Densité')+
geom_density(alpha=.2, fill="steelblue") + theme(axis.text.y = element_blank())
plotMas
####################################
rownames(dataQ) <- dataQ$name
rownames(dataD) <- dataD$Idsouche
test <- data.frame(matrix(NA,ncol= (4) ,nrow = (nrow(dataD))))
rownames(test) <- rownames(dataD)
for (elt in rownames(test))
{
test[elt,1:3] <- c(dataD[elt,6],selection[elt,6],selection[elt,9])
test[elt,4] <-dataD[elt,7]
}
#test$X4 <- lapply(test$X1,function(x) group(x))
color <- c()
color <- rep('steelblue',length(test$X1))
select <- test$X4 == 3 # Adel
color[select] <- 'red4'
select <- test$X4  == 1 # Toulouse
color[select] <- 'forestgreen'
name <- rownames(test)
name[select] <- NA
ggplot(test,aes(x=X3,y=X1)) + geom_point(col=color) + labs(x='Length (mb)',y="Element masqué (%)") + geom_hline(yintercept = 4)
#geom_text(label = name, hjust=0, vjust = 0, size = 3)
select <- test$X4 != 1
test <- data.frame(matrix(NA,ncol= (4) ,nrow = (nrow(dataD))))
##########distribution longeur ##############################
dataD <- read.table('Documents/stage/StatQuality/stat_repeatMasker_all', header = T, sep  = '\t')
##########distribution longeur ##############################
dataD <- read.table('~/Documents/stage/StatQuality/stat_repeatMasker_all', header = T, sep  = '\t')
selection$sum <- as.numeric(lapply(selection$sum ,function(x) x/1000000))
plotLen <- ggplot(selection, aes(x=sum)) +labs(x = "Longeur total de l'assemblage (mb)", y = 'Densité')+
geom_density(alpha=.2, fill="steelblue") + theme(axis.text.y = element_blank())
plotLen
plotMas <- ggplot(dataD, aes(x=Pourcentagebasesmasquées)) +labs(x = "Nucléotide masquée (%)", y = 'Densité')+
geom_density(alpha=.2, fill="steelblue") + theme(axis.text.y = element_blank())
plotMas
####################################
rownames(dataQ) <- dataQ$name
rownames(dataD) <- dataD$Idsouche
test <- data.frame(matrix(NA,ncol= (4) ,nrow = (nrow(dataD))))
rownames(test) <- rownames(dataD)
for (elt in rownames(test))
{
test[elt,1:3] <- c(dataD[elt,6],selection[elt,6],selection[elt,9])
test[elt,4] <-dataD[elt,7]
}
#test$X4 <- lapply(test$X1,function(x) group(x))
color <- c()
color <- rep('steelblue',length(test$X1))
select <- test$X4 == 3 # Adel
color[select] <- 'red4'
select <- test$X4  == 1 # Toulouse
color[select] <- 'forestgreen'
name <- rownames(test)
name[select] <- NA
ggplot(test,aes(x=X3,y=X1)) + geom_point(col=color) + labs(x='Length (mb)',y="Element masqué (%)") + geom_hline(yintercept = 4)
#geom_text(label = name, hjust=0, vjust = 0, size = 3)
select <- test$X4 != 1
View(dataD)
View(selection)
View(dataD)
#############Stat Annotation ###############################
library(ggplot2)
dataA <- read.table('~/Documents/stage/StatQuality/stat_Annotation.txt', header = T, sep  = ',')
qualityLiterrature <- read.table('~/Documents/stage/StatQuality/QualityMbioR.txt', header = T, sep  = '\t')
plotLenMean <- ggplot(dataA ,aes(x=Lengthmean)) + ggtitle("")+labs(x = "Longeur total de l'assemblage (mb)", y = 'Densité')+
geom_density(alpha=.2, fill="steelblue") + theme(axis.text.y = element_blank())
plotLenMean
plotGene <- ggplot(dataA ,aes(x=nbGene)) + ggtitle("")+labs(x = "Longeur total de l'assemblage (mb)", y = 'Densité')+
geom_density(alpha=.2, fill="steelblue") + theme(axis.text.y = element_blank())
plotGene
rownames(dataA) <- dataA$Strain
selectiontest <- selection
rownames(selectiontest) <- lapply(rownames(selection), function(x) str_sub(x,1,nchar(x)-3))
qualityLiterrature <- qualityLiterrature[,-7]
rownames(qualityLiterrature) <- qualityLiterrature$name
qualityLiterrature <- qualityLiterrature[,-10]
selectiontest <- rbind(selectiontest,qualityLiterrature)
for (elt in rownames(dataA))
{
dataA[elt,6] <- selectiontest[elt,9]
}
ggplot(dataA,aes(x=Length.mb.,y=nbGene)) + geom_point(col='steelblue') + labs(x='Nombre de gènes',y="Longueur Moyenne d'un gène") +geom_text(label = name, vjust =-1, size = 3)
color <- rep('steelblue',length(dataA$Length.mb.))
select <- dataA$Length.mb. > 39000000
color[select] <- 'forestgreen'
select <- dataA$Length.mb. > 44000000
color[select] <- 'red4'
name <- dataA$Strain
select <- dataA$Lengthmean > 1450
name[select] <- NA
select <- dataA$nbGene < 11100
color <- rep('steelblue',length(dataA$Length.mb.))
select <- dataA$Length.mb. > 40000000
color[select] <- 'forestgreen'
select <- dataA$Length.mb. > 44000000
color[select] <- 'red4'
name <- dataA$Strain
select <- dataA$Lengthmean > 1450
name[select] <- NA
select <- dataA$nbGene < 11100
name[select] <- dataA[dataA$nbGene <11100,1]
ggplot(dataA,aes(x=nbGene,y=Lengthmean)) + geom_point(col=color) + labs(x='Nombre de gènes',y="Longueur Moyenne d'un gène") +geom_text(label = name, vjust =-1, size = 3)+geom_vline(xintercept = 13554)+geom_vline(xintercept = 11726)+geom_hline(yintercept = 1469)+geom_hline(yintercept = 1605)
#############Stat Annotation ###############################
library(ggplot2)
dataA <- read.table('~/Documents/stage/StatQuality/stat_Annotation.txt', header = T, sep  = ',')
qualityLiterrature <- read.table('~/Documents/stage/StatQuality/QualityMbioR.txt', header = T, sep  = '\t')
plotLenMean <- ggplot(dataA ,aes(x=Lengthmean)) + ggtitle("")+labs(x = "Longeur total de l'assemblage (mb)", y = 'Densité')+
geom_density(alpha=.2, fill="steelblue") + theme(axis.text.y = element_blank())
plotLenMean
plotGene <- ggplot(dataA ,aes(x=nbGene)) + ggtitle("")+labs(x = "Longeur total de l'assemblage (mb)", y = 'Densité')+
geom_density(alpha=.2, fill="steelblue") + theme(axis.text.y = element_blank())
plotGene
rownames(dataA) <- dataA$Strain
selectiontest <- selection
rownames(selectiontest) <- lapply(rownames(selection), function(x) str_sub(x,1,nchar(x)-3))
qualityLiterrature <- qualityLiterrature[,-7]
rownames(qualityLiterrature) <- qualityLiterrature$name
qualityLiterrature <- qualityLiterrature[,-10]
selectiontest <- rbind(selectiontest,qualityLiterrature)
for (elt in rownames(dataA))
{
dataA[elt,6] <- selectiontest[elt,9]
}
ggplot(dataA,aes(x=Length.mb.,y=nbGene)) + geom_point(col='steelblue') + labs(x='Nombre de gènes',y="Longueur Moyenne d'un gène") +geom_text(label = name, vjust =-1, size = 3)
color <- rep('steelblue',length(dataA$Length.mb.))
select <- dataA$Length.mb. > 40000000
color[select] <- 'forestgreen'
select <- dataA$Length.mb. > 44000000
color[select] <- 'red4'
name <- dataA$Strain
select <- dataA$Lengthmean > 1450
name[select] <- NA
select <- dataA$nbGene < 11100
name[select] <- dataA[dataA$nbGene <11100,1]
ggplot(dataA,aes(x=nbGene,y=Lengthmean)) + geom_point(col=color) + labs(x='Nombre de gènes',y="Longueur Moyenne d'un gène") +geom_text(label = name, vjust =-1, size = 3)+geom_vline(xintercept = 13554)+geom_vline(xintercept = 11726)+geom_hline(yintercept = 1469)+geom_hline(yintercept = 1605)
name[select] <- NA
select <- dataA$nbGene < 11100
name[select] <- dataA[dataA$nbGene <11100,1]
select <- dataA$nbGene > 13000
name[select] <- dataA[dataA$nbGene >13000,1]
ggplot(dataA,aes(x=nbGene,y=Lengthmean)) + geom_point(col=color) + labs(x='Nombre de gènes',y="Longueur Moyenne d'un gène") +geom_text(label = name, vjust =-1, size = 3)+geom_vline(xintercept = 13554)+geom_vline(xintercept = 11726)+geom_hline(yintercept = 1469)+geom_hline(yintercept = 1605)
View(dataA)
dataA <- read.table('~/Documents/stage/StatQuality/stat_Annotation.txt', header = T, sep  = ',')
View(dataA)
color <- rep('steelblue',length(dataA$Length.mb.))
select <- dataA$Length.mb. > 40000000
color[select] <- 'forestgreen'
select <- dataA$Length.mb. > 44000000
color[select] <- 'red4'
name <- dataA$Strain
select <- dataA$Lengthmean > 1450
name[select] <- NA
select <- dataA$nbGene < 11100
name[select] <- dataA[dataA$nbGene <11100,1]
select <- dataA$nbGene > 13000
name[select] <- dataA[dataA$nbGene >13000,1]
ggplot(dataA,aes(x=nbGene,y=Lengthmean)) + geom_point(col=color) + labs(x='Nombre de gènes',y="Longueur Moyenne d'un gène") +geom_text(label = name, vjust =-1, size = 3)+geom_vline(xintercept = 13554)+geom_vline(xintercept = 11726)+geom_hline(yintercept = 1469)+geom_hline(yintercept = 1605)
color <- rep('steelblue',length(dataA$Length.mb.))
select <- dataA$Length.mb. > 40
color[select] <- 'forestgreen'
select <- dataA$Length.mb. > 44
color[select] <- 'red4'
name <- dataA$Strain
select <- dataA$Lengthmean > 1450
name[select] <- NA
select <- dataA$nbGene < 11100
name[select] <- dataA[dataA$nbGene <11100,1]
select <- dataA$nbGene > 13000
name[select] <- dataA[dataA$nbGene >13000,1]
ggplot(dataA,aes(x=nbGene,y=Lengthmean)) + geom_point(col=color) + labs(x='Nombre de gènes',y="Longueur Moyenne d'un gène") +geom_text(label = name, vjust =-1, size = 3)+geom_vline(xintercept = 13554)+geom_vline(xintercept = 11726)+geom_hline(yintercept = 1469)+geom_hline(yintercept = 1605)
color <- rep('steelblue',length(dataA$Length.mb.))
select <- dataA$Length.mb. > 40
color[select] <- 'forestgreen'
select <- dataA$Length.mb. > 44
color[select] <- 'red4'
name <- dataA$Strain
select <- dataA$Lengthmean > 1450
name[select] <- NA
select <- dataA$Length.mb. >44
name[select] <- dataA[dataA$Length.mb. >44,1]
select <- dataA$nbGene > 13000
name[select] <- dataA[dataA$nbGene >13000,1]
ggplot(dataA,aes(x=nbGene,y=Lengthmean)) + geom_point(col=color) + labs(x='Nombre de gènes',y="Longueur Moyenne d'un gène") +geom_text(label = name, vjust =-1, size = 3)+geom_vline(xintercept = 13554)+geom_vline(xintercept = 11726)+geom_hline(yintercept = 1469)+geom_hline(yintercept = 1605)
color <- rep('steelblue',length(dataA$Length.mb.))
select <- dataA$Length.mb. > 40
color[select] <- 'forestgreen'
select <- dataA$Length.mb. > 44
color[select] <- 'red4'
name <- dataA$Strain
select <- dataA$Lengthmean > 1450
name[select] <- NA
select <- dataA$nbGene > 13000
name[select] <- dataA[dataA$nbGene >13000,1]
ggplot(dataA,aes(x=nbGene,y=Lengthmean)) + geom_point(col=color) + labs(x='Nombre de gènes',y="Longueur Moyenne d'un gène") +geom_text(label = name, vjust =-1, size = 3)+geom_vline(xintercept = 13554)+geom_vline(xintercept = 11726)+geom_hline(yintercept = 1469)+geom_hline(yintercept = 1605)
dataBar <- data.frame(matrix(NA,ncol= (2) ,nrow = (nrow(dataA)*2)))
color <- rep('steelblue',length(dataA$Length.mb.))
select <- dataA$Length.mb. > 40000000
color[select] <- 'forestgreen'
select <- dataA$Length.mb. > 44000000
color[select] <- 'red4'
name <- dataA$Strain
select <- dataA$Lengthmean > 1450
name[select] <- NA
select <- dataA$nbGene < 11100
name[select] <- dataA[dataA$nbGene <11100,1]
ggplot(dataA,aes(x=nbGene,y=Lengthmean)) + geom_point(col=color) + labs(x='Nombre de gènes',y="Longueur Moyenne d'un gène") +geom_text(label = name, vjust =-1, size = 3)+geom_vline(xintercept = 13554)+geom_vline(xintercept = 11726)+geom_hline(yintercept = 1469)+geom_hline(yintercept = 1605)
color <- rep('steelblue',length(dataA$Length.mb.))
select <- dataA$Length.mb. > 40
color[select] <- 'forestgreen'
select <- dataA$Length.mb. > 44
color[select] <- 'red4'
name <- dataA$Strain
select <- dataA$Lengthmean > 1450
name[select] <- NA
select <- dataA$nbGene < 11100
name[select] <- dataA[dataA$nbGene <11100,1]
ggplot(dataA,aes(x=nbGene,y=Lengthmean)) + geom_point(col=color) + labs(x='Nombre de gènes',y="Longueur Moyenne d'un gène") +geom_text(label = name, vjust =-1, size = 3)+geom_vline(xintercept = 13554)+geom_vline(xintercept = 11726)+geom_hline(yintercept = 1469)+geom_hline(yintercept = 1605)
